# handlers/onboarding_handler.py
# [Dev-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç]: –ù–û–í–´–ô –§–ê–ô–õ –î–õ–Ø –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–ì–û –û–ë–£–ß–ï–ù–ò–Ø

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from telegram.error import BadRequest

# --- "–ö–ù–ò–ì–ê": –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–∞—à–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è ---
# [Dev-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç]: –î–µ–Ω–∏—Å, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç—ã –∑–¥–µ—Å—å.
# [Dev-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç]: –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.

ONBOARDING_PAGES = [
    # –°—Ç—Ä–∞–Ω–∏—Ü–∞ 0
    {
        "text": (
            "ü§ñ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±—É—á–µ–Ω–∏–µ –æ—Ç AGM!* \n\n"
            "–Ø –ø—Ä–æ–≤–µ–¥—É —Ç–µ–±—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –Ω–∞ 100%.\n\n"
            "–ù–∞—á–Ω–µ–º —Å —Å–∞–º–æ–≥–æ –ø—Ä–æ—Å—Ç–æ–≥–æ. –ù–∞–∂–º–∏ '–î–∞–ª—å—à–µ', —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö."
        ),
    },
    # –°—Ç—Ä–∞–Ω–∏—Ü–∞ 1
    {
        "text": (
            "üé≠ *–ß—Ç–æ —Ç–∞–∫–æ–µ '–ü–µ—Ä—Å–æ–Ω–∞–∂–∏'?* \n\n"
            "–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ ‚Äî —ç—Ç–æ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è AI. –í—ã–±—Ä–∞–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, —Ç—ã –∑–∞–¥–∞–µ—à—å "
            "–º–æ–¥–µ–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è. \n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–µ—à—å –æ–±—â–∞—Ç—å—Å—è —Å '–ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–º' –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–¥–µ–π –∏–ª–∏ —Å–æ '–°—Ü–µ–Ω–∞—Ä–∏—Å—Ç–æ–º' –¥–ª—è –ø–æ–º–æ—â–∏ —Å —Å—é–∂–µ—Ç–æ–º."
        ),
    },
    # –°—Ç—Ä–∞–Ω–∏—Ü–∞ 2
    {
        "text": (
            "‚úçÔ∏è *–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π*\n\n"
            "–°–∞–º–∞—è –º–æ—â–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî —Ç—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π! "
            "–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å '–ø—Ä–æ–º–ø—Ç' ‚Äî –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è AI, –æ–ø–∏—Å—ã–≤–∞—é—â—É—é –µ–≥–æ —Ä–æ–ª—å, –∑–Ω–∞–Ω–∏—è –∏ –º–∞–Ω–µ—Ä—É —Ä–µ—á–∏.\n\n"
            "–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å —É–∑–∫–æ—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –ø–æ–¥ –ª—é–±—É—é —Ç–≤–æ—é –∑–∞–¥–∞—á—É."
        ),
    },
    # –°—Ç—Ä–∞–Ω–∏—Ü–∞ 3
    {
        "text": (
            "üß† *–í—ã–±–æ—Ä AI –º–æ–¥–µ–ª–∏*\n\n"
            "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–Ω—ã—Ö AI –º–æ–¥–µ–ª–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, Gemini, GPT). "
            "–ö–∞–∂–¥–∞—è –∏–∑ –Ω–∏—Ö –∏–º–µ–µ—Ç —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã. \n\n"
            "–¢—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –º–µ–∂–¥—É –Ω–∏–º–∏ –≤ –º–µ–Ω—é '–í—ã–±–æ—Ä AI', —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ª—É—á—à—É—é –º–æ–¥–µ–ª—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏."
        ),
    },
    # –°—Ç—Ä–∞–Ω–∏—Ü–∞ 4
    {
        "text": (
            "üñºÔ∏è *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π*\n\n"
            "–ü–æ–º–∏–º–æ —Ç–µ–∫—Å—Ç–∞, –±–æ—Ç —É–º–µ–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π DALL-E 3 –∏ YandexArt. "
            "–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–µ–∂–∏–º –≤ –º–µ–Ω—é '–í—ã–±–æ—Ä AI' –∏ –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ —Ö–æ—á–µ—à—å –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å."
        ),
    },
    # –°—Ç—Ä–∞–Ω–∏—Ü–∞ 5
    {
        "text": (
            "‚úÖ *–û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!* \n\n"
            "–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å –æ–± –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞. –ù–µ –±–æ–π—Å—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –∏ –º–æ–¥–µ–ª—è–º–∏, "
            "—á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–∞–∏–ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. \n\n"
            "–£–¥–∞—á–∏!"
        ),
    },
    # –°—Ç—Ä–∞–Ω–∏—Ü–∞ 6
    {
        "text": (
            " *–†–ï–ó–ï–†–í!* \n\n"
            "–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å –æ–± –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞. –ù–µ –±–æ–π—Å—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –∏ –º–æ–¥–µ–ª—è–º–∏, "
            "—á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–∞–∏–ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. \n\n"
            "–£–¥–∞—á–∏!"
        ),
    }
]

# --- –õ–û–ì–ò–ö–ê: –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è "–ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è" —Å—Ç—Ä–∞–Ω–∏—Ü ---

def _get_onboarding_keyboard(page_index: int) -> InlineKeyboardMarkup:
    """–°–æ–±–∏—Ä–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã."""
    buttons = []
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π (–∏–Ω–¥–µ–∫—Å 0)
    if page_index > 0:
        buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="onboarding_prev"))
    
    # –ö–Ω–æ–ø–∫–∞ "–î–∞–ª—å—à–µ" –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π
    if page_index < len(ONBOARDING_PAGES) - 1:
        buttons.append(InlineKeyboardButton("‚û°Ô∏è –î–∞–ª—å—à–µ", callback_data="onboarding_next"))

    # –ï—Å–ª–∏ –º—ã –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –¥–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç—å"
    if page_index == len(ONBOARDING_PAGES) - 1:
        buttons.append(InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="onboarding_close"))
        
    return InlineKeyboardMarkup([buttons])

async def show_onboarding_page(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±—É—á–µ–Ω–∏—è.
    """
    query = update.callback_query
    # –ü–æ–ª—É—á–∞–µ–º "–∑–∞–∫–ª–∞–¥–∫—É" - –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ user_data.
    # –ï—Å–ª–∏ –µ–µ –Ω–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ–º —Å 0.
    page_index = context.user_data.get('onboarding_page_index', 0)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    page_content = ONBOARDING_PAGES[page_index]
    text = page_content["text"]
    reply_markup = _get_onboarding_keyboard(page_index)
    
    try:
        # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É (query —Å—É—â–µ—Å—Ç–≤—É–µ—Ç),
        # —Ç–æ –º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        if query:
            await query.edit_message_text(text, reply_markup=reply_markup, parse_mode='Markdown')
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ (–∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é), —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        else:
            await update.message.reply_text(text, reply_markup=reply_markup, parse_mode='Markdown')
    except BadRequest as e:
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É "—Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å", –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç—ã–∫–∞–µ—Ç –Ω–∞ –æ–¥–Ω—É –∏ —Ç—É –∂–µ –∫–Ω–æ–ø–∫—É
        if "Message is not modified" in str(e):
            await query.answer() # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å–∏–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–µ
        else:
            raise

async def handle_onboarding_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> bool:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ "–î–∞–ª—å—à–µ", "–ù–∞–∑–∞–¥" –∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å".
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ callback –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –∏–Ω–∞—á–µ False.
    """
    query = update.callback_query
    if not query or not query.data.startswith("onboarding_"):
        return False
        
    await query.answer()
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –æ–±—É—á–µ–Ω–∏—è
    if query.data == "onboarding_close":
        await query.edit_message_text("–û—Ç–ª–∏—á–Ω–æ! –ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –ø–µ—Ä–µ—á–∏—Ç–∞—Ç—å, —è –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å. üëã")
        context.user_data.pop('onboarding_page_index', None) # –£–¥–∞–ª—è–µ–º "–∑–∞–∫–ª–∞–¥–∫—É"
        return True

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    page_index = context.user_data.get('onboarding_page_index', 0)
    
    # "–ü–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–µ–º" —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if query.data == "onboarding_next":
        page_index += 1
    elif query.data == "onboarding_prev":
        page_index -= 1
        
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é "–∑–∞–∫–ª–∞–¥–∫—É"
    context.user_data['onboarding_page_index'] = page_index
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await show_onboarding_page(update, context)
    
    return True

async def start_onboarding(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    [Dev-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç]: –£–ú–ù–ê–Ø –í–ï–†–°–ò–Ø.
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è.
    """
    # [Dev-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç]: –ò–°–ü–û–õ–¨–ó–£–ï–ú setdefault.
    # [Dev-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç]: –≠—Ç–æ —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–∫–∞–∑–∞—Ç—å: "–ø–æ—Å–º–æ—Ç—Ä–∏ –≤ user_data, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á 'onboarding_page_index'.
    # [Dev-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç]: –ï—Å–ª–∏ –æ–Ω –µ—Å—Ç—å - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–π. –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç - —Å–æ–∑–¥–∞–π –µ–≥–æ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 0".
    context.user_data.setdefault('onboarding_page_index', 0)
    
    # [Dev-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç]: –¢–µ–ø–µ—Ä—å —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É:
    # [Dev-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç]: –ª–∏–±–æ 0 –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ª–∏–±–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –¥–ª—è –≤–µ—Ä–Ω—É–≤—à–µ–≥–æ—Å—è.
    await show_onboarding_page(update, context)